"""empty message

Revision ID: 8c2cbfa0cfce
Revises: 97b028c41973
Create Date: 2025-10-01 10:49:21.197198

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8c2cbfa0cfce'
down_revision: Union[str, Sequence[str], None] = '97b028c41973'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Добавляем CHECK constraint для ограничения уровня вложенности деятельностей (максимум 3)
    op.create_check_constraint(
        "check_activity_level",
        "activities",
        "level >= 1 AND level <= 3"
    )
    
    # Заполнение тестовыми данными
    
    # 1. Здания с координатами (разные города России)
    buildings_table = sa.table('buildings',
        sa.column('id', sa.Integer),
        sa.column('address', sa.String),
        sa.column('latitude', sa.Numeric),
        sa.column('longitude', sa.Numeric)
    )
    
    op.bulk_insert(buildings_table, [
        {'id': 1, 'address': 'г. Москва, ул. Тверская, д. 1', 'latitude': 55.76095020, 'longitude': 37.61816980},
        {'id': 2, 'address': 'г. Москва, ул. Арбат, д. 10', 'latitude': 55.75064060, 'longitude': 37.59335780},
        {'id': 3, 'address': 'г. Санкт-Петербург, Невский пр., д. 28', 'latitude': 59.93398550, 'longitude': 30.34267430},
        {'id': 4, 'address': 'г. Новосибирск, ул. Ленина, д. 52', 'latitude': 55.03028060, 'longitude': 82.92020870},
        {'id': 5, 'address': 'г. Екатеринбург, ул. Малышева, д. 36', 'latitude': 56.83826000, 'longitude': 60.60545700},
        {'id': 6, 'address': 'г. Казань, ул. Баумана, д. 58', 'latitude': 55.78951450, 'longitude': 49.12216760},
        {'id': 7, 'address': 'г. Москва, Красная площадь, д. 1', 'latitude': 55.75370330, 'longitude': 37.62091330}
    ])
    
    # 2. Деятельности (древовидная структура, максимум 3 уровня)
    activities_table = sa.table('activities',
        sa.column('id', sa.Integer),
        sa.column('parent_id', sa.Integer),
        sa.column('name', sa.String),
        sa.column('level', sa.Integer)
    )
    
    op.bulk_insert(activities_table, [
        # Уровень 1 (корневые категории)
        {'id': 1, 'parent_id': None, 'name': 'Еда', 'level': 1},
        {'id': 2, 'parent_id': None, 'name': 'Автомобили', 'level': 1},
        {'id': 3, 'parent_id': None, 'name': 'Услуги', 'level': 1},
        
        # Уровень 2 (подкатегории)
        {'id': 4, 'parent_id': 1, 'name': 'Мясная продукция', 'level': 2},
        {'id': 5, 'parent_id': 1, 'name': 'Молочная продукция', 'level': 2},
        {'id': 6, 'parent_id': 1, 'name': 'Хлебобулочные изделия', 'level': 2},
        {'id': 7, 'parent_id': 2, 'name': 'Грузовые', 'level': 2},
        {'id': 8, 'parent_id': 2, 'name': 'Легковые', 'level': 2},
        {'id': 9, 'parent_id': 2, 'name': 'Запчасти', 'level': 2},
        {'id': 10, 'parent_id': 2, 'name': 'Аксессуары', 'level': 2},
        {'id': 11, 'parent_id': 3, 'name': 'IT-услуги', 'level': 2},
        {'id': 12, 'parent_id': 3, 'name': 'Консалтинг', 'level': 2},
        
        # Уровень 3 (детальные категории)
        {'id': 13, 'parent_id': 4, 'name': 'Говядина', 'level': 3},
        {'id': 14, 'parent_id': 4, 'name': 'Свинина', 'level': 3},
        {'id': 15, 'parent_id': 4, 'name': 'Птица', 'level': 3},
        {'id': 16, 'parent_id': 5, 'name': 'Молоко', 'level': 3},
        {'id': 17, 'parent_id': 5, 'name': 'Сыры', 'level': 3},
        {'id': 18, 'parent_id': 5, 'name': 'Йогурты', 'level': 3},
        {'id': 19, 'parent_id': 8, 'name': 'Седаны', 'level': 3},
        {'id': 20, 'parent_id': 8, 'name': 'Внедорожники', 'level': 3},
        {'id': 21, 'parent_id': 11, 'name': 'Разработка ПО', 'level': 3},
        {'id': 22, 'parent_id': 11, 'name': 'Тестирование', 'level': 3}
    ])
    
    # 3. Организации
    organizations_table = sa.table('organizations',
        sa.column('id', sa.Integer),
        sa.column('name', sa.String),
        sa.column('building_id', sa.Integer)
    )
    
    op.bulk_insert(organizations_table, [
        {'id': 1, 'name': 'ООО "Рога и Копыта"', 'building_id': 1},
        {'id': 2, 'name': 'ООО "Мясокомбинат Московский"', 'building_id': 2},
        {'id': 3, 'name': 'ООО "Молочный завод"', 'building_id': 3},
        {'id': 4, 'name': 'ИП Петров А.И.', 'building_id': 1},
        {'id': 5, 'name': 'ЗАО "АвтоТрейд"', 'building_id': 4},
        {'id': 6, 'name': 'ООО "Запчасти Плюс"', 'building_id': 5},
        {'id': 7, 'name': 'ООО "IT-Решения"', 'building_id': 6},
        {'id': 8, 'name': 'ООО "Консалтинговая группа"', 'building_id': 7},
        {'id': 9, 'name': 'ООО "Хлебзавод №1"', 'building_id': 2},
        {'id': 10, 'name': 'ООО "Автосалон Премиум"', 'building_id': 4}
    ])
    
    # 4. Телефоны организаций
    phone_numbers_table = sa.table('phone_numbers',
        sa.column('id', sa.Integer),
        sa.column('organization_id', sa.Integer),
        sa.column('phone_number', sa.String)
    )
    
    op.bulk_insert(phone_numbers_table, [
        {'id': 1, 'organization_id': 1, 'phone_number': '2-222-222'},
        {'id': 2, 'organization_id': 1, 'phone_number': '3-333-333'},
        {'id': 3, 'organization_id': 1, 'phone_number': '8-923-666-13-13'},
        {'id': 4, 'organization_id': 2, 'phone_number': '8-495-123-45-67'},
        {'id': 5, 'organization_id': 2, 'phone_number': '8-495-123-45-68'},
        {'id': 6, 'organization_id': 3, 'phone_number': '8-812-987-65-43'},
        {'id': 7, 'organization_id': 4, 'phone_number': '8-916-555-77-88'},
        {'id': 8, 'organization_id': 5, 'phone_number': '8-383-444-22-11'},
        {'id': 9, 'organization_id': 5, 'phone_number': '8-383-444-22-12'},
        {'id': 10, 'organization_id': 6, 'phone_number': '8-343-777-88-99'},
        {'id': 11, 'organization_id': 7, 'phone_number': '8-843-111-22-33'},
        {'id': 12, 'organization_id': 8, 'phone_number': '8-495-999-00-11'},
        {'id': 13, 'organization_id': 9, 'phone_number': '8-495-888-77-66'},
        {'id': 14, 'organization_id': 10, 'phone_number': '8-383-555-44-33'}
    ])
    
    # 5. Связь организаций с деятельностями (many-to-many)
    organization_activities_table = sa.table('organization_activities',
        sa.column('id', sa.Integer),
        sa.column('organization_id', sa.Integer),
        sa.column('activity_id', sa.Integer)
    )
    
    op.bulk_insert(organization_activities_table, [
        # ООО "Рога и Копыта" - мясная и молочная продукция
        {'id': 1, 'organization_id': 1, 'activity_id': 4},  # Мясная продукция
        {'id': 2, 'organization_id': 1, 'activity_id': 5},  # Молочная продукция
        {'id': 3, 'organization_id': 1, 'activity_id': 13}, # Говядина
        {'id': 4, 'organization_id': 1, 'activity_id': 16}, # Молоко
        
        # ООО "Мясокомбинат Московский" - только мясо
        {'id': 5, 'organization_id': 2, 'activity_id': 4},  # Мясная продукция
        {'id': 6, 'organization_id': 2, 'activity_id': 13}, # Говядина
        {'id': 7, 'organization_id': 2, 'activity_id': 14}, # Свинина
        {'id': 8, 'organization_id': 2, 'activity_id': 15}, # Птица
        
        # ООО "Молочный завод" - только молочка
        {'id': 9, 'organization_id': 3, 'activity_id': 5},  # Молочная продукция
        {'id': 10, 'organization_id': 3, 'activity_id': 16}, # Молоко
        {'id': 11, 'organization_id': 3, 'activity_id': 17}, # Сыры
        {'id': 12, 'organization_id': 3, 'activity_id': 18}, # Йогурты
        
        # ИП Петров - хлеб
        {'id': 13, 'organization_id': 4, 'activity_id': 6},  # Хлебобулочные
        
        # ЗАО "АвтоТрейд" - легковые и грузовые
        {'id': 14, 'organization_id': 5, 'activity_id': 7},  # Грузовые
        {'id': 15, 'organization_id': 5, 'activity_id': 8},  # Легковые
        {'id': 16, 'organization_id': 5, 'activity_id': 19}, # Седаны
        {'id': 17, 'organization_id': 5, 'activity_id': 20}, # Внедорожники
        
        # ООО "Запчасти Плюс" - запчасти и аксессуары
        {'id': 18, 'organization_id': 6, 'activity_id': 9},  # Запчасти
        {'id': 19, 'organization_id': 6, 'activity_id': 10}, # Аксессуары
        
        # ООО "IT-Решения" - IT-услуги
        {'id': 20, 'organization_id': 7, 'activity_id': 11}, # IT-услуги
        {'id': 21, 'organization_id': 7, 'activity_id': 21}, # Разработка ПО
        {'id': 22, 'organization_id': 7, 'activity_id': 22}, # Тестирование
        
        # ООО "Консалтинговая группа" - консалтинг
        {'id': 23, 'organization_id': 8, 'activity_id': 12}, # Консалтинг
        
        # ООО "Хлебзавод №1" - хлеб
        {'id': 24, 'organization_id': 9, 'activity_id': 6},  # Хлебобулочные
        
        # ООО "Автосалон Премиум" - легковые
        {'id': 25, 'organization_id': 10, 'activity_id': 8},  # Легковые
        {'id': 26, 'organization_id': 10, 'activity_id': 19}, # Седаны
        {'id': 27, 'organization_id': 10, 'activity_id': 20}  # Внедорожники
    ])
    
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Удаляем данные в обратном порядке (учитываем внешние ключи)
    op.execute("DELETE FROM organization_activities")
    op.execute("DELETE FROM phone_numbers")
    op.execute("DELETE FROM organizations")
    op.execute("DELETE FROM activities")
    op.execute("DELETE FROM buildings")
    
    # Удаляем CHECK constraint
    op.drop_constraint("check_activity_level", "activities", type_="check")
    
    # ### end Alembic commands ###
